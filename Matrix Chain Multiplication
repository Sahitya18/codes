***** RECURSION ******
class a {
    public static void main(String[] args) {
        System.out.println(mcm(new int[] { 10, 30, 5, 60 }, 1, 3));
    }

    private static int mcm(int[] arr, int i, int j) {
        if (i >= j)
            return 0;
        int ans = Integer.MAX_VALUE;
        for (int k = i; k < j; k++) {
            int temp = mcm(arr, i, k) + mcm(arr, k + 1, j) + (arr[i - 1] * arr[k] * arr[j]);
            ans = Math.min(ans, temp);
        }
        return ans;
    }
}

***** MEMOISATION ******
class a {
    public static void main(String[] args) {
        int dp[][] = new int[1001][1001];
        System.out.println(mcm(new int[] { 10, 30, 5, 60 }, 1, 3, dp));
    }

    private static int mcm(int[] arr, int i, int j, int dp[][]) {
        if (i >= j)
            return 0;
        if (dp[i][j] != 0)
            return dp[i][j];
        int ans = Integer.MAX_VALUE;
        for (int k = i; k < j; k++) {
            int temp = mcm(arr, i, k, dp) + mcm(arr, k + 1, j, dp) + (arr[i - 1] * arr[k] * arr[j]);
            ans = Math.min(ans, temp);
        }
        return dp[i][j] = ans;
    }
}
